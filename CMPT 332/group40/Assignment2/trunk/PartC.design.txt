/*
 * reader-writer-test.c
 *
 * Sean Robson-Kullman
 * 11182480
 * skr519
 *
 * Matthew Muulenga
 * 11144528
 * mam558
 *
 */


	This sectioin will be separated into two different Producer/Consumer based
queues. 

1. 	Keyboard input, that is put into a list one character at a time that 
	will be sent to the other computer.
2. 	Incoming information from the partner computer, will be enqued one 
	character at a time. the consumer will dequeue and print the element 
	to the console.

	Both of the consumers will have to print to the console, and will there 
will need to be a mutex in place to determine who is allowed to print to the
console. The functionality will be handed off between the consumers based on 
return commands, where the current consumer printing gets priority to 
continue printing.

	This sectioin will be separated into two different Producer/Consumer based
queues. 

1. 	Keyboard input, that is put into a list one character at a time that 
	will be sent to the other computer.
2. 	Incoming information from the partner computer, will be enqued one 
	character at a time. the consumer will dequeue and print the element 
	to the console.

	Both of the consumers will have to print to the console, and will there 
will need to be a mutex in place to determine who is allowed to print to the
console. The functionality will be handed off between the consumers based on 
return commands, where the current consumer printing gets priority to 
continue printing.

	The global variables will consist of:
		- LIST* for output to partnered computer. 
		- LIST* for recieved input from partnered computer.
		- mutex for who is printing to their content.
		- 2 semaphores for the two producer/consumer models.

	There will also be a thread that is limited specifically to comunication.
This will keep the project mutually exclusive in the cridical section.To 
ensure that messages are not scrambled, we will have to take the Lock Step 
apoach to comunicate successfully between computers/processes. Where each 
process will hit a line of code, and wait for confirmation that its partner 
process is ready to recieve or send the information.

