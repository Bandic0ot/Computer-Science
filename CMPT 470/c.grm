keys
  main auto double int struct break else long switch
  case enum register typedef char extern return union
  continue for signed void do if static while
  default goto sizeof volatile const float short unsigned
end keys

comments
/* */
//
end comments

define constant_type
    'const
end define

define signed_modifier
    'signed
  | 'unsigned
end define

define long_modifier
    'long
  | 'short
end define

define type
    [signed_modifier]
  | [opt signed_modifier] [repeat long_modifier] 'int
  | [opt signed_modifier] 'char
  | 'float
  | 'double
  | 'long 'double
  | 'void
  | [constant_type] [type]
end define

define variable
    [id]
  | [mem_op] [SPOFF] [id] [SPON]
end define

define expression
    [variable]
  | [number]
  | [stringlit]
  | [charlit]
  | [expression] [arithmetic_op] [expression]
  | [sign] [SPOFF] [expression] [SPON]
  | '( [expression] ')
end define

define and_or
    '&&
  | '||
end define

define condition
    [expression]
  | [expression] [compare_op] [expression]
  | [condition] [and_or] [condition]
  | '! [SPOFF] [condition] [SPON]
  | '( [expression] [compare_op] [expression] ')
end define

define declaration
    [type] [list variable]
end define

define assignment
    [variable] [assign_op] [expression]
  | [variable] [SPOFF] [plus_minus_op] [SPON]
  | [plus_minus_op] [SPOFF] [variable] [SPON]
  | [type] [assignment]
end define

define function_call
    [variable] [SPOFF] '( [SPON] [list expression] ')
end define

define statement
    [declaration]'; [NL]
  | [assignment]'; [NL]
  | [function_call]'; [NL]
  | 'return [opt expression]'; [NL]
  | 'continue; [NL]
  | 'break; [NL]
end define

define block
    [statement]
  | [func_struct]
  | [if_struct]
  | [loop_struct]
  | [switch_struct]
end define

define if_conditional
    'if [SPOFF] '( [SPON] [condition] ')
end define

define else_conditional
    'else
  | 'else 'if [SPOFF] '( [SPON] [condition] ')
end define

define loop
    [SPOFF] 'for '( [SPON] [opt assignment]'; [opt condition]'; [opt assignment] ') 
  | [SPOFF] 'while '( [SPON] [condition] ') 
end define

define switch_statement
    'switch [SPOFF] '( [SPON] [condition] ')
end define

define switch_case
    'case [expression] [SPOFF] ': [SPON] [NL][IN]
      [repeat block] [EX]
  | 'default [SPOFF] ': [SPON] [NL][IN]
      [repeat block] [EX]
end define

define if_struct
    [NL] [if_conditional] [NL][IN]
      [statement] [EX]
    [repeat else_struct] [NL][NL]
  | [NL] [if_conditional] '{ [NL][IN]
      [repeat block] [EX]
    '} [repeat else_struct] [NL][NL]
end define

define else_struct
    [else_conditional] [NL][IN]
      [statement] [EX]
  | [else_conditional] '{ [NL][IN]
      [repeat block] [EX]
    '}
end define

define loop_struct
    [NL] [loop] [NL][IN]
      [statement] [NL][EX]
  | [NL] [loop] '{ [NL][IN]
      [repeat block] [EX]
    '} [NL][NL]
  | [NL] 'do '{ [NL][IN]
      [repeat block] [EX]
    '} 'while [SPOFF] '( [SPON] [condition] '); [NL][NL]
end define

define switch_struct
    [NL] [switch_statement] '{ [NL][IN]
      [repeat switch_case] [EX]
    '} [NL][NL]
end define

define func_struct
    [NL] [type] [variable]'([repeat declaration]') '{ [NL][IN]
      [repeat block] [EX]
    '} [NL][NL]
end define

define body
  [NL] 'int 'main [SPOFF] '() [SPON] '{ [NL][IN]
    [repeat block] [EX]
  '} [NL]
end define
